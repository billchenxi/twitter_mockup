{"ast":null,"code":"var _jsxFileName = \"/Users/bill/Documents/Codes/Full_stack/client/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [likedPosts, setLikedPosts] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/posts\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(response.data.listOfPosts);\n    });\n  }, []);\n\n  const likeAPost = postId => {\n    axios.post(\"http://localhost:3001/likes\", {\n      PostId: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id === postId) {\n          if (response.data.liked) {\n            return { ...post,\n              Likes: [...post.Likes, 0]\n            };\n          } else {\n            const likesArray = post.Likes;\n            likesArray.pop();\n            return { ...post,\n              Likes: likesArray\n            };\n          }\n        } else {\n          return post;\n        }\n      }));\n\n      if (likedPosts.includes(postId)) {\n        setLikedPosts(likedPosts.filter(id => {\n          return id != postId;\n        }));\n      } else {\n        setLikedPosts([...likedPosts, postId]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfPosts.map((value, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [\" \", value.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          onClick: () => {\n            history.push(`/post/${value.id}`);\n          },\n          children: value.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: value.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n              onClick: () => {\n                likeAPost(value.id);\n              },\n              className: likedPosts.includes(value.id) ? \"unlikeBttn\" : \"likeBttn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", value.Likes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"ktsDE8etHAOUbuO5QL7rluAfCLw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/bill/Documents/Codes/Full_stack/client/src/pages/Home.js"],"names":["React","axios","useEffect","useState","useHistory","ThumbUpAltIcon","Home","listOfPosts","setListOfPosts","likedPosts","setLikedPosts","history","get","headers","accessToken","localStorage","getItem","then","response","data","likeAPost","postId","post","PostId","map","id","liked","Likes","likesArray","pop","includes","filter","value","key","title","push","postText","username","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\n\nfunction Home() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [likedPosts, setLikedPosts] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/posts\", { headers: { accessToken: localStorage.getItem(\"accessToken\") } }).then((response) => {\n      setListOfPosts(response.data.listOfPosts);\n    });\n  }, []);\n\n  const likeAPost = (postId) => {\n    axios\n      .post(\n        \"http://localhost:3001/likes\",\n        { PostId: postId },\n        { headers: { accessToken: localStorage.getItem(\"accessToken\") } }\n      )\n      .then((response) => {\n        setListOfPosts(\n          listOfPosts.map((post) => {\n            if (post.id === postId) {\n              if (response.data.liked) {\n                return { ...post, Likes: [...post.Likes, 0] };\n              } else {\n                const likesArray = post.Likes;\n                likesArray.pop();\n                return { ...post, Likes: likesArray };\n              }\n            } else {\n              return post;\n            }\n          })\n        );\n        if (likedPosts.includes(postId)) {\n            setLikedPosts(\n              likedPosts.filter((id) => {\n                return id != postId;\n              })\n            );\n          } else {\n            setLikedPosts([...likedPosts, postId]);\n          }\n      });\n  };\n\n\n  return (\n    <div>\n      {listOfPosts.map((value, key) => {\n        return (\n          <div key={key} className=\"post\">\n            <div className=\"title\"> {value.title} </div>\n            <div\n              className=\"body\"\n              onClick={() => {\n                history.push(`/post/${value.id}`);\n              }}\n            >\n              {value.postText}\n            </div>\n            <div className=\"footer\">\n                <div className=\"username\">{value.username}</div>\n                <div className=\"buttons\">\n                <ThumbUpAltIcon onClick={() => {\n                    likeAPost(value.id);\n                    }}\n                    className={\n                        likedPosts.includes(value.id) ? \"unlikeBttn\" : \"likeBttn\"\n                    }\n                />\n                <label> {value.Likes.length}</label>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}